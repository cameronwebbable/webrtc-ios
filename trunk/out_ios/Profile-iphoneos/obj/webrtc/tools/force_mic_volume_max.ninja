build obj/webrtc/tools/force_mic_volume_max.actions_depends.stamp: stamp $
    libvoice_engine.a libfield_trial_default.a libcommon_audio.a $
    libsystem_wrappers.a libwebrtc_base.a libjsoncpp.a libcrssl.a $
    libcrnspr.a libcrnss.a libnss_static.a libsqlite_regexp.a $
    libsqlite_regexp.a libicui18n.a libicuuc.a libicudata.a libcrnssckbi.a $
    libcommon_audio_neon.a libaudio_coding_module.a libCNG.a libG711.a $
    libG722.a libiLBC.a libiSAC.a libiSACFix.a libisac_neon.a libPCM16B.a $
    libwebrtc_opus.a libopus.a libneteq.a libaudio_conference_mixer.a $
    libaudio_processing.a libaudio_processing_neon.a $
    obj/webrtc/modules/audio_processing/gen_nsx_core_neon_offsets_h.actions_rules_copies.stamp $
    gen/audio_processing/asm_offsets/lib_core_neon_offsets.a $
    obj/webrtc/modules/audio_processing/gen_aecm_core_neon_offsets_h.actions_rules_copies.stamp $
    libwebrtc_utility.a libmedia_file.a libwebrtc_video_coding.a $
    libwebrtc_i420.a libcommon_video.a libyuv.a libyuv_neon.a $
    libvideo_coding_utility.a libwebrtc_vp8.a libvpx.a $
    obj/third_party/libvpx/gen_asm_offsets_vp8.actions_rules_copies.stamp $
    gen/third_party/libvpx/libvpx_asm_offsets_vp8.a $
    obj/third_party/libvpx/gen_asm_offsets_vpx_scale.actions_rules_copies.stamp $
    gen/third_party/libvpx/libvpx_asm_offsets_vpx_scale.a libaudio_device.a $
    libbitrate_controller.a librtp_rtcp.a libpaced_sender.a $
    libremote_bitrate_estimator.a librbe_components.a

build obj/webrtc/tools/force_mic_volume_max.compile_depends.stamp: stamp $
    obj/webrtc/modules/audio_processing_neon.compile_depends.stamp $
    obj/webrtc/modules/audio_processing/gen_nsx_core_neon_offsets_h.actions_rules_copies.stamp $
    obj/webrtc/modules/audio_processing/gen_aecm_core_neon_offsets_h.actions_rules_copies.stamp $
    obj/third_party/libvpx/libvpx.actions_rules_copies.stamp $
    obj/third_party/libvpx/gen_asm_offsets_vp8.actions_rules_copies.stamp $
    obj/third_party/libvpx/gen_asm_offsets_vpx_scale.actions_rules_copies.stamp

defines = -DV8_DEPRECATION_WARNINGS -DBLINK_SCALE_FILTERS_AT_RECORD_TIME $
    -DDISABLE_NACL -DCHROMIUM_BUILD -DCR_CLANG_REVISION=206824 $
    -DUSE_LIBJPEG_TURBO=1 -DENABLE_CONFIGURATION_POLICY $
    -DDISCARDABLE_MEMORY_ALWAYS_SUPPORTED_NATIVELY $
    -DSYSTEM_NATIVELY_SIGNALS_MEMORY_PRESSURE -DENABLE_EGLIMAGE=1 $
    -DCLD_VERSION=1 -DENABLE_SPELLCHECK=1 -DDISABLE_FTP_SUPPORT=1 $
    -DWEBRTC_MODULE_UTILITY_VIDEO -DWEBRTC_ARCH_ARM -DWEBRTC_ARCH_ARM_V7 $
    -DWEBRTC_ARCH_ARM_NEON -DWEBRTC_POSIX -DWEBRTC_MAC -DWEBRTC_IOS $
    -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -DNDEBUG -DNVALGRIND $
    -DDYNAMIC_ANNOTATIONS_ENABLED=0 -DNS_BLOCK_ASSERTIONS=1 $
    -D_FORTIFY_SOURCE=2
includes = -I../..
cflags = -isysroot $
    /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.1.sdk $
    -Os -gdwarf-2 -fvisibility=hidden -Werror -Wnewline-eof $
    -miphoneos-version-min=6.0 -arch armv7 -Wall -Wendif-labels -Wextra $
    -Wno-unused-parameter -Wno-missing-field-initializers -Wheader-hygiene $
    -Wno-c++11-narrowing -Wno-char-subscripts $
    -Wno-unneeded-internal-declaration -Wno-covered-switch-default $
    -Wstring-conversion -Wno-deprecated-register -Wno-selector-type-mismatch
cflags_c = -std=c99 -fcolor-diagnostics
cflags_cc = -std=gnu++0x -fno-rtti -fno-exceptions $
    -fvisibility-inlines-hidden -fno-threadsafe-statics -fcolor-diagnostics
cflags_objc = $cflags_c -Wobjc-missing-property-synthesis
cflags_objcc = $cflags_cc -Wobjc-missing-property-synthesis $
    -fobjc-call-cxx-cdtors

build $
    obj/webrtc/tools/force_mic_volume_max/force_mic_volume_max.force_mic_volume_max.o: $
    cxx ../../webrtc/tools/force_mic_volume_max/force_mic_volume_max.cc || $
    obj/webrtc/tools/force_mic_volume_max.compile_depends.stamp

ldflags = -framework Foundation -framework Security -framework $
    SystemConfiguration -framework UIKit -Wl,-search_paths_first $
    -Wl,-dead_strip -miphoneos-version-min=6.0 -isysroot $
    /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.1.sdk $
    -arch armv7 -L.
libs = $
    /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.1.sdk/usr/lib/libsqlite3.dylib $
    -framework AudioToolbox -framework CoreAudio
build force_mic_volume_max: link $
    obj/webrtc/tools/force_mic_volume_max/force_mic_volume_max.force_mic_volume_max.o $
    libvoice_engine.a libfield_trial_default.a libcommon_audio.a $
    libsystem_wrappers.a libwebrtc_base.a libjsoncpp.a libcrssl.a $
    libcrnspr.a libcrnss.a libnss_static.a libsqlite_regexp.a libicui18n.a $
    libicuuc.a libicudata.a libcrnssckbi.a libcommon_audio_neon.a $
    libaudio_coding_module.a libCNG.a libG711.a libG722.a libiLBC.a $
    libiSAC.a libiSACFix.a libisac_neon.a libPCM16B.a libwebrtc_opus.a $
    libopus.a libneteq.a libaudio_conference_mixer.a libaudio_processing.a $
    libaudio_processing_neon.a $
    gen/audio_processing/asm_offsets/lib_core_neon_offsets.a $
    libwebrtc_utility.a libmedia_file.a libwebrtc_video_coding.a $
    libwebrtc_i420.a libcommon_video.a libyuv.a libyuv_neon.a $
    libvideo_coding_utility.a libwebrtc_vp8.a libvpx.a $
    gen/third_party/libvpx/libvpx_asm_offsets_vp8.a $
    gen/third_party/libvpx/libvpx_asm_offsets_vpx_scale.a libaudio_device.a $
    libbitrate_controller.a librtp_rtcp.a libpaced_sender.a $
    libremote_bitrate_estimator.a librbe_components.a | $
    obj/webrtc/modules/audio_processing/gen_nsx_core_neon_offsets_h.actions_rules_copies.stamp $
    obj/webrtc/modules/audio_processing/gen_aecm_core_neon_offsets_h.actions_rules_copies.stamp $
    obj/third_party/libvpx/gen_asm_offsets_vp8.actions_rules_copies.stamp $
    libsqlite_regexp.a $
    obj/third_party/libvpx/gen_asm_offsets_vpx_scale.actions_rules_copies.stamp
  ld = $ldxx
  postbuilds = $ && (export $
      BUILT_PRODUCTS_DIR=/Users/cwebb/Sqwiggle/webrtc/trunk/out_ios/Profile-iphoneos; $
      export CONFIGURATION=Profile-iphoneos; export $
      EXECUTABLE_NAME=force_mic_volume_max; export $
      EXECUTABLE_PATH=force_mic_volume_max; export $
      FULL_PRODUCT_NAME=force_mic_volume_max; export $
      PRODUCT_NAME=force_mic_volume_max; export $
      PRODUCT_TYPE=com.apple.product-type.tool; export $
      SDKROOT=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.1.sdk; $
      export $
      SRCROOT=/Users/cwebb/Sqwiggle/webrtc/trunk/out_ios/Profile-iphoneos/../../webrtc/tools; $
      export SOURCE_ROOT="$${SRCROOT}"; export $
      TARGET_BUILD_DIR=/Users/cwebb/Sqwiggle/webrtc/trunk/out_ios/Profile-iphoneos; $
      export TEMP_DIR="$${TMPDIR}"; (cd ../../webrtc/tools && dsymutil $
      ../../out_ios/Profile-iphoneos/force_mic_volume_max -o $
      ../../out_ios/Profile-iphoneos/force_mic_volume_max.dSYM && strip  $
      ../../out_ios/Profile-iphoneos/force_mic_volume_max && $
      $${TARGET_BUILD_DIR}/gyp-mac-tool code-sign-bundle $
      "5E39A28CDE1D5A07BAF9F1DEE8F82380A1D33F8B" "" "" ""); G=$$?; ((exit $
      $$G) || rm -rf force_mic_volume_max) && exit $$G)
